function [imageCorr]=vignCorrectionSigma45(image,dist,aperture)
% Vignetting correction for Sigma 4.5 mm from Cauwerts et al. 2012
                    
% Correction values, source: Cauwerts et al. 2012
vignCor = ...
    [2.8 -4.6322 8.2363 -5.3033 2.031 -0.7423 -0.3243; ...
    3.2 -5.148 4.9714 4.6563 -7.252 2.2996 -0.1941; ...
    3.5 -9.6619 19.082 -12.07 1.5323 0.5931 -0.1051; ...
    4 -10.416 22.24 -17.324 5.4708 -0.4415 -0.0379; ...
    4.5 -16.995 38.535 -31.706 11.233 -1.499 0.0515; ...
    5 -19.773 46.952 -40.763 15.507 -2.3204 0.0809; ...
    5.6 -10.524 25.072 -21.66 7.8575 -0.8505 -0.0533; ...
    6.3 -1.8667 2.5246 0.5489 -2.386 1.3558 -0.2387; ...
    7.1 -0.3065 -0.9753 2.9796 2.6684 1.0975 -0.17; ...
    8 1.1387 4.3744 5.842 -3.7053 1.266 -0.1882; ...
    9 3.5709 -11.455 13.641 -7.7084 2.1894 -0.2546; ...
    10 2.5612 -8.7685 11.139 -6.7781 2.0969 -0.2654; ...
    11 -0.3919 -0.6742 3.016 -3.1818 1.4497 -0.2431; ...
    12 1.5912 -5.4085 6.7282 -4.1054 1.3756 -0.1985; ...
    14 -0.3552 -0.7969 2.9851 -2.972 1.3246 -0.2219; ...
    16 0.7516 -3.6828 5.6796 -4.0508 1.4906 -0.2306; ...
    18 -0.0303 -1.2351 2.8527 -2.5295 1.1092 -0.1966; ...
    20 -0.7736 0.7316 0.9932 -1.7952 0.9881 -0.1782; ...
    22 -0.9597 1.4964 -0.3075 -0.742 0.6078 -0.1282];

% Extract correction values for the given aperture
vignCorAper = vignCor(vignCor(:,1)==aperture,end:-1:2);
% Calculate correction matrix for the input image
mask = dist<=1; 
coefVectorSize=length(vignCorAper);
vignCorCoef=reshape(vignCorAper*reshape((dist.*mask).^permute(ones([coefVectorSize, size(dist)]).*(1:coefVectorSize)', [2, 3, 1]), [], coefVectorSize)', size(dist))+ones(size(dist));

image = im2double(image);
lumin = rgb2lab(image);
lumin(:,:,1)=lumin(:,:,1).*vignCorCoef;

imageCorr = lab2rgb(lumin);
imageCorr = im2uint16(imageCorr);

end